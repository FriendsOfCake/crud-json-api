name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: [ '7.4', '8.0', '8.1' ]
        db-type: [ mysql ]
        prefer-lowest: ['']
        include:
          - php-version: '7.4'
            db-type: 'mysql'
            prefer-lowest: 'prefer-lowest'

    steps:

      - name: Setup MySQL latest
        if: matrix.db-type == 'mysql' && matrix.php-version != '7.4'
        run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql --default-authentication-plugin=mysql_native_password --disable-log-bin

      - name: Setup MySQL 5.6
        if: matrix.db-type == 'mysql' && matrix.php-version == '7.4'
        run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql:5.6 --character-set-server=utf8

      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, apcu, pdo_${{ matrix.db-type }}
          ini-values: apc.enable_cli = 1
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

      - name: composer install
        run: |
          if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
            composer update --prefer-lowest --prefer-stable
          else
            composer update
          fi

      - name: Configure PHPUnit matcher
        if: matrix.php-version == '7.4' && matrix.db-type == 'mysql'
        uses: mheap/phpunit-matcher-action@v1

      - name: Run PHPUnit
        run: |
          if [[ ${{ matrix.db-type }} == 'mysql' && ${{ matrix.php-version }} != '7.2' ]]; then export DB_URL='mysql://root:root@127.0.0.1/cakephp?init[]=SET sql_mode = "STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"'; fi
          if [[ ${{ matrix.db-type }} == 'mysql' && ${{ matrix.php-version }} == '7.2' ]]; then export DB_URL='mysql://root:root@127.0.0.1/cakephp?encoding=utf8'; fi
          if [[ ${{ matrix.db-type }} == 'mysql' && ${{ matrix.php-version }} == '7.4' ]]; then
            vendor/bin/phpunit --coverage-clover=coverage.xml --verbose
          else
            vendor/bin/phpunit
          fi

      - name: Code Coverage Report
        if: success() && matrix.php-version == '7.4' && matrix.db-type == 'mysql'
        uses: codecov/codecov-action@v3

  coding-standard:
    name: Coding Standard
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, apcu
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

      - name: composer install
        run: composer install

      - name: Run PHP CodeSniffer
        run: composer cs-check

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, apcu
          coverage: none
          tools: cs2pr

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

      - name: composer install
        run: composer stan-setup

      - name: Run psalm
        run: vendor/bin/psalm.phar --output-format=github

      - name: Run phpstan
        run: vendor/bin/phpstan.phar analyse --error-format=checkstyle ./src | cs2pr
